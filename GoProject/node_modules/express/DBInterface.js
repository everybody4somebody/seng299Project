/*
Database wrapper for SENG299 go project
Author: Michael Alward
Very little error control in this version of the code, needs to be updated for that
*/

var MongoClient = require('mongodb').MongoClient
  , assert = require('assert');
// Connection URL
var url = 'mongodb://localhost:27017/myproject';
	
//Login function
//Checks if a username, password combo is present in the database and returns user data on completion
//Inputs:
//	myUsername:string, 
//	myPassword:string, 
//	callback:function - a callback function that can accept json format data
function login(myUsername, myPassword, callback){
	MongoClient.connect(url, function(err, db) {
		assert.equal(null, err);
		console.log("Connected successfully to server");
		findDocument(db, 'users', {'user' : myUsername, 'password' : myPassword}, callback);
		db.close();
	});
}

//Create account function
//Creates a new user account
//Inputs:
//	myUsername:string, 
//	myPassword:string, 
//	callback:function - a callback function to be executed on completion
function createAccount(myUsername, myPassword, callback){
	MongoClient.connect(url, function(err, db) {
		assert.equal(null, err);
		console.log("Connected successfully to server");
		insertDocument(db, 'users', {'user':myUsername, 'password':myPassword, 'wins':0, 'losses':0, 'ELO':0}, callback);
		db.close();
	});
}

//Update function
//Updates player stats and stores replays
//Inputs:
//	myUsername:string, 
//	myStats:json object, could be modified to an array if needed
//	myReplay:what goes in is what comes out
//	callback:function - a callback function to be executed on completion
function updateStats(myUsername, myStats, myReplay, callback){
	MongoClient.connect(url, function(err, db) {
		assert.equal(null, err);
		console.log("Connected successfully to server");
		findAndModify(db, 'users', {'user':myUsername}, myStats,
			insertDocument(db, 'replays', {'user':myUsername, 'replay':myReplay}, callback)
		)
		db.close();
	});
}

//Get replays from the server
function getReplays(myUsername, callback){
	MongoClient.connect(url, function(err, db){
		assert.equal(null, err);
		console.log("Connected successfully to server");
		findDocument(db, 'replays', {'user':myUsername}, callback);
		db.close();
	})
}

//making functions available
module.exports = {login : login, createAccount : createAccount, updateStats : updateStats, getReplays : getReplays, DBDump : DBDump};


//Functions used internally beyond this comment

//Insert function
function insertDocument(db, collectionName, myDocument, callback) {
	// Get the documents collection
	var collection = db.collection(collectionName);
	// Insert some documents
	collection.insert(myDocument, {w:1}, function(){
		console.log("File inserted");
		callback();
	});
}

//Query function
function findDocument(db, collectionName, query, callback) {
	// Get the documents collection
	var collection = db.collection(collectionName);
	// Find some documents
	collection.find(query).toArray(function(err, docs) {
		assert.equal(err, null);
		callback(docs);
	});			
}

//Modify a document
function findAndModify(db, collectionName, query, update, callback){
	var collection = db.collection(collectionName);
	collection.findAndModify(query, [['username', 1]], {$set:update}, {new:true}, callback);
}

//debug dump function
function DBDump(collectionName){
	MongoClient.connect(url, function(err, db) {
		assert.equal(null, err);
		console.log("Connected successfully to server");
		var collection = db.collection(collectionName);
		collection.find().toArray(function(err, docs) {
			console.log(docs)
		});
		db.close();
	});

}

